[
    {
        "id": "aed06a793e32536c",
        "type": "tab",
        "label": "CNC",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "cbbf6211a762a19f",
        "type": "http request",
        "z": "aed06a793e32536c",
        "name": "3",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://cnc.kovalev.team/get/3",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 310,
        "y": 40,
        "wires": [
            [
                "9af8e10fc8ba3281"
            ]
        ]
    },
    {
        "id": "37fc7fa39b2846e7",
        "type": "http request",
        "z": "aed06a793e32536c",
        "name": "5",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://cnc.kovalev.team/get/5",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 310,
        "y": 160,
        "wires": [
            [
                "a18e4e40df6964d8"
            ]
        ]
    },
    {
        "id": "a8d05142be799268",
        "type": "inject",
        "z": "aed06a793e32536c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 100,
        "wires": [
            [
                "cbbf6211a762a19f",
                "37fc7fa39b2846e7"
            ]
        ]
    },
    {
        "id": "9af8e10fc8ba3281",
        "type": "function",
        "z": "aed06a793e32536c",
        "name": "parser",
        "func": "const { data } = msg.payload;\n\nconst coreCurrrentWorkingTime = data[0][1][1][1];\nconst channelTotalWorkingTime = data[1][1][0][1];\nconst channelStatus = data[1][1][2][1];\nconst channelMode = data[1][1][3][1];\nconst programmProgress = parseInt(data[1][1][5][1]);\nconst programm = data[1][1][6][1];\nconst hasError = Number(channelMode === 'Ошибка');\nmsg['data'] = {\n    coreCurrrentWorkingTime,\n    channelTotalWorkingTime,\n    channelStatus,\n    channelMode,\n    programmProgress,\n    programm,\n    hasError\n};\nmsg.source = 'machine_3'\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 40,
        "wires": [
            [
                "ee2e8d83cae93253",
                "d16385422de897da"
            ]
        ]
    },
    {
        "id": "98db97262caad3a4",
        "type": "mysql",
        "z": "aed06a793e32536c",
        "mydb": "5c2206ae950610bd",
        "name": "machine_3",
        "x": 870,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "ee2e8d83cae93253",
        "type": "function",
        "z": "aed06a793e32536c",
        "name": "INSERT MACHINE_3",
        "func": "const { \n    coreCurrrentWorkingTime,\n    channelTotalWorkingTime,\n    channelStatus,\n    channelMode,\n    programmProgress,\n    programm,\n    hasError,\n} = msg.data;\nmsg.topic = `INSERT INTO machine_3 VALUES(DEFAULT, '${coreCurrrentWorkingTime}', '${channelTotalWorkingTime}', '${channelStatus}', '${channelMode}', '${programmProgress}', '${programm}', '${hasError}', DEFAULT);`\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 40,
        "wires": [
            [
                "98db97262caad3a4"
            ]
        ]
    },
    {
        "id": "a18e4e40df6964d8",
        "type": "function",
        "z": "aed06a793e32536c",
        "name": "parser",
        "func": "const { data } = msg.payload;\n\nconst coreCurrrentWorkingTime = data[0][1][1][1];\nconst channelTotalWorkingTime = data[1][1][0][1];\nconst channelStatus = data[1][1][2][1];\nconst channelMode = data[1][1][3][1];\nconst programmProgress = parseInt(data[1][1][5][1]);\nconst programm = data[1][1][6][1];\nconst hasError = Number(channelMode === 'Ошибка');\nmsg['data'] = {\n    coreCurrrentWorkingTime,\n    channelTotalWorkingTime,\n    channelStatus,\n    channelMode,\n    programmProgress,\n    programm,\n    hasError\n};\nmsg.source = 'machine_5'\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 160,
        "wires": [
            [
                "236b6a6976dba72b",
                "d16385422de897da"
            ]
        ]
    },
    {
        "id": "236b6a6976dba72b",
        "type": "function",
        "z": "aed06a793e32536c",
        "name": "INSERT MACHINE_5",
        "func": "const { \n    coreCurrrentWorkingTime,\n    channelTotalWorkingTime,\n    channelStatus,\n    channelMode,\n    programmProgress,\n    programm,\n    hasError,\n} = msg.data;\nmsg.topic = `INSERT INTO machine_5 VALUES(DEFAULT, '${coreCurrrentWorkingTime}', '${channelTotalWorkingTime}', '${channelStatus}', '${channelMode}', '${programmProgress}', '${programm}', '${hasError}', DEFAULT);`\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 160,
        "wires": [
            [
                "0db5aad6a8873bde"
            ]
        ]
    },
    {
        "id": "0db5aad6a8873bde",
        "type": "mysql",
        "z": "aed06a793e32536c",
        "mydb": "5c2206ae950610bd",
        "name": "machine_5",
        "x": 870,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "5cf5204d8eef2485",
        "type": "telegram sender",
        "z": "aed06a793e32536c",
        "name": "tg_bot",
        "bot": "b68415293bbf9b82",
        "haserroroutput": false,
        "outputs": 1,
        "x": 950,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "76cc705b7b2e04bd",
        "type": "function",
        "z": "aed06a793e32536c",
        "name": "mapToTgMessage",
        "func": "msg.payload = {\n    type: \"message\",\n    chatId: 304574137,\n    content: `Ошибка на станке ${msg.source} при выполнении программы ${msg.data.programm}`\n}\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 100,
        "wires": [
            [
                "5cf5204d8eef2485"
            ]
        ]
    },
    {
        "id": "d16385422de897da",
        "type": "switch",
        "z": "aed06a793e32536c",
        "name": "filter error",
        "property": "data.hasError",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 620,
        "y": 100,
        "wires": [
            [
                "76cc705b7b2e04bd"
            ]
        ]
    },
    {
        "id": "5c2206ae950610bd",
        "type": "MySQLdatabase",
        "name": "",
        "host": "db4free.net",
        "port": "3306",
        "db": "inno_prod",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "b68415293bbf9b82",
        "type": "telegram bot",
        "botname": "inno_prod_data_bot",
        "usernames": "@tazis @ssddtt123",
        "chatids": "304574137",
        "baseapiurl": "",
        "updatemode": "polling",
        "pollinterval": "300",
        "usesocks": false,
        "sockshost": "",
        "socksprotocol": "socks5",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "botpath": "",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": false
    }
]